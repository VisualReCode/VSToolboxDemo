//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockMarketClient.StockMarketService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockInfo", Namespace="http://schemas.datacontract.org/2004/07/StockMarket")]
    [System.SerializableAttribute()]
    public partial class StockInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockMarketService.IStockInfoService")]
    public interface IStockInfoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockInfoService/GetStocks", ReplyAction="http://tempuri.org/IStockInfoService/GetStocksResponse")]
        StockMarketClient.StockMarketService.StockInfo[] GetStocks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockInfoService/GetStocks", ReplyAction="http://tempuri.org/IStockInfoService/GetStocksResponse")]
        System.Threading.Tasks.Task<StockMarketClient.StockMarketService.StockInfo[]> GetStocksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockInfoService/GetPrice", ReplyAction="http://tempuri.org/IStockInfoService/GetPriceResponse")]
        decimal GetPrice(string code, System.DateTimeOffset time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockInfoService/GetPrice", ReplyAction="http://tempuri.org/IStockInfoService/GetPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetPriceAsync(string code, System.DateTimeOffset time);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockInfoServiceChannel : StockMarketClient.StockMarketService.IStockInfoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockInfoServiceClient : System.ServiceModel.ClientBase<StockMarketClient.StockMarketService.IStockInfoService>, StockMarketClient.StockMarketService.IStockInfoService {
        
        public StockInfoServiceClient() {
        }
        
        public StockInfoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockInfoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockInfoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockInfoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public StockMarketClient.StockMarketService.StockInfo[] GetStocks() {
            return base.Channel.GetStocks();
        }
        
        public System.Threading.Tasks.Task<StockMarketClient.StockMarketService.StockInfo[]> GetStocksAsync() {
            return base.Channel.GetStocksAsync();
        }
        
        public decimal GetPrice(string code, System.DateTimeOffset time) {
            return base.Channel.GetPrice(code, time);
        }
        
        public System.Threading.Tasks.Task<decimal> GetPriceAsync(string code, System.DateTimeOffset time) {
            return base.Channel.GetPriceAsync(code, time);
        }
    }
}
