//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockTickerConsole.StockTickerService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockPriceUpdate", Namespace="http://schemas.datacontract.org/2004/07/StockTicker")]
    [System.SerializableAttribute()]
    public partial class StockPriceUpdate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTimeOffset TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTimeOffset Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://recode.samplex.duplex", ConfigurationName="StockTickerService.IStockTicker", CallbackContract=typeof(StockTickerConsole.StockTickerService.IStockTickerCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IStockTicker {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://recode.samplex.duplex/IStockTicker/Watch")]
        void Watch(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://recode.samplex.duplex/IStockTicker/Watch")]
        System.Threading.Tasks.Task WatchAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://recode.samplex.duplex/IStockTicker/Unwatch")]
        void Unwatch(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://recode.samplex.duplex/IStockTicker/Unwatch")]
        System.Threading.Tasks.Task UnwatchAsync(string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockTickerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://recode.samplex.duplex/IStockTicker/Update")]
        void Update([System.ServiceModel.MessageParameterAttribute(Name="update")] StockTickerConsole.StockTickerService.StockPriceUpdate update1);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockTickerChannel : StockTickerConsole.StockTickerService.IStockTicker, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockTickerClient : System.ServiceModel.DuplexClientBase<StockTickerConsole.StockTickerService.IStockTicker>, StockTickerConsole.StockTickerService.IStockTicker {
        
        public StockTickerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public StockTickerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public StockTickerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockTickerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public StockTickerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Watch(string code) {
            base.Channel.Watch(code);
        }
        
        public System.Threading.Tasks.Task WatchAsync(string code) {
            return base.Channel.WatchAsync(code);
        }
        
        public void Unwatch(string code) {
            base.Channel.Unwatch(code);
        }
        
        public System.Threading.Tasks.Task UnwatchAsync(string code) {
            return base.Channel.UnwatchAsync(code);
        }
    }
}
